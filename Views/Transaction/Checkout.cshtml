@model IEnumerable<Sips.ViewModels.CartVM>

@{
    ViewData["Title"] = "Checkout";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="checkout-section">
    <h1>Checkout</h1>
    <div class="checkout-container">
        <div class="checkout-items">

            <table class="table">
                <thead>
                    <tr>
                        <th>Item Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
@*                         <th>Add Ins</th>
 *@@*                         <th>Sweetness</th>
                        <th>Milk Type</th>
                        <th>Ice</th>
                        <th>Subtotal</th> *@

                    </tr>
                </thead>                
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                            <td><button class="btn btn-outline-dark" data-modal="myModal" itemid="@item.ItemId">@item.Name</button></td>
                            <td>@item.Subtotal</td>
                            <td>@item.Quantity</td>
@*                                 @foreach (var addIn in item.AddInNames)
                            {
                                <td>@addIn.AddInName</td>
                                @* <td>@addIn.PriceModifier</td>
                            } *@
                            @* <td>@item.AddInNames</td> *@
@*                                 <td>@item.SweetnessPercent</td> 
                            <td>@item.MilkType</td>
                            <td>@item.IcePercent</td>
                            <td>@item.Subtotal</td> *@
                            
                    </tr>
                }
                </tbody>
            </table>
        </div>
        <div class="checkout-details">
            <div class="order-details">
                <p>Total: </p>
                <input type="hidden" value="USD" id="currency" />

                <div id="paypal-button-container"></div>
            </div>

        </div>

    </div>
</div>


<!-- Modals -->
@* @foreach (var item in Model)
{ *@
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-dialog cart-dialog">
                <div class="modal-content">

                    <div class="modal-header">
                        <h5 class="modal-title">Cart</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <div id="cart-container" class="modal-body cart-container">
@*                         <h5>@item.Name</h5>
                        <p>Sweetness: @item.SweetnessPercent</p>
                        <p>Milk: @item.MilkType</p>
                        <p>Ice: @item.IcePercent</p>

                        <div class="add-ins">
                            <p style="font-weight:bold">Add-Ins: </p>
                            @foreach (var addIn in item.AddInNames)
                            {
                                <p>@addIn.AddInName</p>
                            }
                        </div>                           
                        <h5 class="subtotal">Subtotal: $@item.Subtotal</h5> *@
                    </div>                    

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary">Understood</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
@* }
 *@
<script src="https://www.paypal.com/sdk/js?client-id=@ViewData["PayPalClientId"]"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Get all buttons with the class "btn-outline-dark"
        var buttons = document.querySelectorAll('.btn-outline-dark');

        //Add event listener to each button
        buttons.forEach(function (button) {
            button.addEventListener('click', function () {
                // Get the modal ID from the button's data-modal attribute
                var cartContainer = document.getElementById('cart-container');
                cartContainer.innerHTML = '';

                var modalId = button.getAttribute('data-modal');
                var itemId = button.getAttribute('itemId');

                fetch('/Transaction/GetCartItems?itemId=' + itemId, {
                    method: 'GET',
                    headers: {
                        'Accept': 'application/json',
                        // Add any other headers if needed
                    },
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Process the data returned from the server
                        console.log(JSON.stringify(data));
                        if (data && data.length > 0) {

                            data.forEach(item => {
                                // Create elements and append them to the cart container
                                var itemElement = document.createElement('div');
                                itemElement.innerHTML = `
                                    <h5>${item.name}</h5>
                                    <p>Sweetness: ${item.sweetnessPercent}</p>
                                    <p>Milk: ${item.milkType}</p>
                                    <p>Ice: ${item.icePercent}</p>
                                    <div class="add-ins">
                                    <p style="font-weight:bold">Add-Ins: </p>
                                    ${item.addInNames.map(addIn => `<p>${addIn.addInName}</p>`).join('')}
                                    </div>
                                    <h5 class="subtotal">Subtotal: $${item.subtotal}</h5>
                                `;
                                cartContainer.appendChild(itemElement);
                            });
                            alert(itemElement);
                        }

                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
                    // Display the modal using Bootstrap's modal method
                    var modal = new bootstrap.Modal(document.getElementById(modalId));
                    modal.show();

            });
        });
    });
    var grandTotalAmount = 0;

    function AddTotal(id, price, currency) {
        var totalElement = document.getElementById('total_' + id);
        var total = parseInt(totalElement.textContent);
        total += 1;
        totalElement.textContent = total;
      

        var itemPrice = parseFloat(price);
        var subTotal = total * itemPrice;
        document.getElementById('subTotal_' + id).textContent = formatCurrency(subTotal, currency);

        // Update grand total
        grandTotalAmount += itemPrice;

        // Display grand total
        document.getElementById('grandTotalAmount').textContent = formatCurrency(grandTotalAmount, currency);
    }

    paypal.Buttons({
        // Set up the transaction
        createOrder: function (data, actions) {
            return actions.order.create({
                purchase_units: [{
                    amount: {
                        value: parseFloat(document.getElementById('totalAmount').innerText.replace('$', '')),
                        currency:
                            document.getElementById('currency').value
                    }
                }]
            });
        },
        // Finalize the transaction
        onApprove: function (data, actions) {
            return actions.order.capture().then(function (details) {
                const redirectUrl =
                    '/Home/PayPalConfirmation?TransactionId=' +
                    encodeURIComponent(details.id) + '&Amount=' +
                    encodeURIComponent(details.purchase_units[0].amount.value) + '&PayerName=' +
                    encodeURIComponent(details.payer.name.given_name) + '&PayerEmail=' +
                    encodeURIComponent(details.payer.email_address) + '&CreatedDate=' +
                    encodeURIComponent(details.create_time) + '&PaymentMethod=' +
                    encodeURIComponent('paypal') + '&Currency=' +
                    encodeURIComponent('CAD');
                window.location.href = redirectUrl
            }).catch(err => alert('An error occurred during the transaction.'))
        },
        onCancel: function (data) {
            alert('Transaction was cancelled.');
        },
        onError: function (err) {
            alert('An error occurred during the transaction.');
        },
        style: {
            layout: 'horizontal', // 'vertical', 'horizontal'
            color: 'silver',      // 'gold', 'blue', 'silver', 'black'
            shape: 'rect',      // 'rect', 'pill'
            label: 'checkout'     // 'checkout', 'pay', 'buynow', 'paypal'
        }
    }).render('#paypal-button-container');
</script>