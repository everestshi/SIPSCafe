@model PaginatedList<Sips.SipsModels.ViewModels.UserVM>

@{
    ViewData["Title"] = "User Roles";
}

@* <h1>User Roles</h1> *@
@* <p>
    <a asp-action="Create">Create New User Role</a>
</p> *@
<table class="table">
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                <div class="form-group" style="display: inline-block">
                    <span>Search on User Email:</span>
                    <input type="text" name="SearchString"
                           value="@ViewData["currentFilter"]" required />
                </div>
                <div class="form-group" style="display: inline-block">
                    <input type="submit" value="Search"
                           class="btn btn-primary" />
                </div>
                <a asp-action="Index">Back to Full List</a>
            </p>
        </div>
    </form>

    <thead>
        <tr>
            <th>
                @Html.ActionLink("Users", "Index", new { sortOrder = ViewBag.NameSortParm })
            </th>
            <th><a asp-action="Create">Create New User Role</a></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Email</td>
                <td>
                    @Html.ActionLink( "View Roles"
                , "Detail"
                , new { userName = item.Email })
                </td>
            </tr>
        }
    </tbody>
</table>
<nav>
    <ul class="pagination">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link"
               href="@Url.Action("Index", new { pageNumber = Model.PageIndex - 1 })">
                Previous
            </a>
        </li>
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link"
               href="@Url.Action("Index", new { pageNumber = Model.PageIndex + 1 })">
                Next
            </a>
        </li>
    </ul>
</nav>

