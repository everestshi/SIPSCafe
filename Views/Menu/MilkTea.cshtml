@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model Sips.ViewModels.MenuItemVM


<div class="tea-container">
    <h1>Milk Teas</h1>
    <div>
        <a href="@Url.Action("Slush", "Menu")">
            <h4>Slushes</h4>
        </a>
        <a href="@Url.Action("FruitTea1", "Menu")">
            <h4>Fruit Teas</h4>
        </a>
    </div>
</div>
  <div class="tea-subtotal">
        
            <p>Quantity: <span id="totalQuantity"> 0</span></p>
            <p>Subtotal: <span id="totalAmount"> 0</span></p>

    </div>
</div>
<div class="tea-list">
    @foreach (var tea in Model.Items)
    {
        <div class="tea-item">
            <img src="~/images/boba-02.png" alt="@tea.Name" class="img-fluid">
            <div class="tea-copy">
                <h3>@tea.Name</h3>
                <p>@tea.Description</p>
                <p>Price: $@tea.BasePrice.ToString()</p>
@*                 <button class="btn btn-secondary customize" data-toggle="modal" data-target="#customizeModal" data-price="@tea.BasePrice">Customize</button> *@
            </div>
            @if (User.Identity.IsAuthenticated)
            {
                <div class="tea-btns">
                    <button class="btn btn-primary add-to-cart" id="addButton_@tea.ItemId" onclick="AddOne('@tea.ItemId', '@tea.BasePrice')">Add to Cart</button>
                    <button class="btn btn-secondary customize" data-toggle="modal" data-target="#customizeModal" data-price="@tea.BasePrice">Customize</button>
                    <input type="hidden" id="itemPrice_@tea.ItemId" value="@tea.BasePrice" />

                </div>
            }
        </div>
        <!-- Modal -->
        <div class="modal fade" id="customizeModal" tabindex="-1" role="dialog" aria-labelledby="customizeModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="customizeModalLabel">Customize Your Drink</h5>
                        <button type="button" class="close" id="closeModal" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <!-- Customization options -->
                        <div class="customization-options">
                            <!-- Ice Level Options -->
                            <div>
                                <h4>Ice Level:</h4>
                                <ul>
                                    @foreach (var option in Model.IceOptions)
                                    {
                                        <li>
                                            <label>
                                                <input type="radio" name="iceOptions" value="@option.IceId" @(option.IcePercent == "Regular Ice" ? "checked" : "")>
                                                @option.IcePercent
                                            </label>
                                        </li>
                                    }
                                </ul>
                            </div>

                            <!-- Sweetness Level Options -->
                            <div>
                                <h4>Sweetness Level:</h4>
                                <ul>
                                    @foreach (var option in Model.SweetnessOptions)
                                    {
                                        <li>
                                            <label>
                                                <input type="radio" name="sweetnessOptions" value="@option.SweetnessId" @(option.SweetnessPercent == "100% Sweet" ? "checked" : "")>
                                                @option.SweetnessPercent
                                            </label>
                                        </li>
                                    }
                                </ul>
                            </div>

                            <!-- Milk Choice Options -->
                            <div>
                                <h4>Milk Choice:</h4>
                                <ul>
                                    @foreach (var option in Model.MilkOptions)
                                    {
                                        <li>
                                            <label>
                                                <input type="radio" name="milkOptions" value="@option.MilkChoiceId" @(option.MilkType == "Regular" ? "checked" : "")>
                                                @option.MilkType - $@option.PriceModifier
                                            </label>
                                        </li>
                                    }
                                </ul>
                            </div>

                            <!-- Addon Options -->
                            <div>
                                <h4>Add Ins:</h4>
                                <ul>
                                    @foreach (var option in Model.AddInOptions)
                                    {
                                        <li>
                                            <label>
                                                <input type="checkbox" name="addInOptions" value="@option.AddInId">
                                                @option.AddInName - $@option.PriceModifier
                                            </label>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <span id="modalPrice"></span>
                        <button type="button" class="btn btn-secondary" id="closeModalButton" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary">Add to Cart</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {

    // Add event listener for customize button click, get the price from data attribute and update the modal price
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var customizeButtons = document.querySelectorAll('.customize');
            var modalPrice = document.getElementById('modalPrice');

            customizeButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    // Get the price from data attribute
                    var price = button.getAttribute('data-price');
                    // Update the modal price
                    modalPrice.textContent = '$' + parseFloat(price).toFixed(2);
                });
            });
        });
    </script>

    <script>

        var totalQuantity = 0;
        var totalAmount = 0;

        function AddOne(id, price, currency) {
            var totalElement = document.getElementById('totalQuantity');
            var total = parseInt(totalElement.textContent);
            total += 1;
            totalElement.textContent = total;

            var itemPrice = parseFloat(price);
            var subTotal = total * itemPrice;
            document.getElementById('totalAmount').textContent = formatCurrency(subTotal, currency);

            // Update grand total
            totalQuantity += 1;
            totalAmount += itemPrice;

            // Display grand total
            document.getElementById('totalQuantity').textContent = totalQuantity;
            document.getElementById('totalAmount').textContent = formatCurrency(totalAmount, currency);
        }

        function formatCurrency(amount, currency) {
            return '$' + amount.toFixed(2) + ' ' + currency;
        }


        document.addEventListener('DOMContentLoaded', function () {
            // Get references to the customize and add to cart buttons
            var customizeButtons = document.querySelectorAll('.customize');
            var addToCartButtons = document.querySelectorAll('.add-to-cart');
            // Add event listener for customize button click
            customizeButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    // Show the modal
                    document.getElementById('customizeModal').classList.add('show');
                    document.getElementById('customizeModal').style.display = 'block';
                });
            });
            // Add event listener for add to cart button click
            addToCartButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    // Add your logic to add item to cart here
                    // alert('Item added to cart!');
                });
            });
            // Hide the modal when close button is clicked
            document.getElementById('closeModal').addEventListener('click', function () {
                document.getElementById('customizeModal').classList.remove('show');
                document.getElementById('customizeModal').style.display = 'none';
            });

            document.getElementById('closeModalButton').addEventListener('click', function () {
                document.getElementById('customizeModal').classList.remove('show');
                document.getElementById('customizeModal').style.display = 'none';
            });
        });
    </script>
}

<style>
    /* Customize modal appearance */
    .modal-content {
        border-radius: 20px;
        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);
        background-color: #fff;
    }

    .modal-header {
        border-bottom: none;
    }

    .modal-footer {
        border-top: none;
    }

    .customization-options {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-gap: 20px;
    }

        .customization-options h4 {
            font-size: 16px;
            margin-top: 0;
        }

        .customization-options ul {
            list-style: none;
            padding: 0;
        }

        .customization-options label {
            font-size: 14px;
        }

        .customization-options input[type="checkbox"] {
            margin-right: 5px;
        }

    /* Customize close button */
    #closeModal {
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 24px;
        color: #888;
        border: none;
        background: none;
        cursor: pointer;
    }
</style>