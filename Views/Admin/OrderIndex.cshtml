@model PaginatedList<Sips.ViewModels.OrderDetailVM>

@{
    ViewData["Title"] = "OrderIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Orders</h1>
@ViewBag.Message

<form asp-action="ItemIndex" method="get">
    <div class="form-actions no-color">
        <p>
            <div class="form-group" style="display: inline-block">
                <span>Search on Email-Product-Store ID:</span>
                <input type="text" name="SearchString"
                       value="@ViewData["currentFilter"]" required />
            </div>
            <div class="form-group" style="display: inline-block">
                <input type="submit" value="Search"
                       class="btn btn-primary" />
            </div>
            <a asp-action="ItemIndex">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Transaction ID", "OrderIndex", new { sortOrder = ViewBag.IDSortParm })
            </th>
            <th>
                @Html.ActionLink("Date Ordered", "OrderIndex", new { sortOrder = ViewBag.DateSortParm })
            </th>
            <th>
                @Html.ActionLink("Store ID", "OrderIndex", new { sortOrder = ViewBag.StorIDSortParm })
            </th>
            <th>
                @Html.ActionLink("Email", "OrderIndex", new { sortOrder = ViewBag.EmailSortParm })
            </th>
            <th>
                @Html.ActionLink("Total Price", "OrderIndex", new { sortOrder = ViewBag.TotalPriceSortParm })
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TransactionId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOrdered)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.StoreId)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.UserEmail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.totalPrice)
                </td>
                <td>
                    <a asp-action="OrderDetails" asp-route-id="@item.TransactionId">Details</a> |
                    <a asp-action="OrderDelete" asp-route-id="@item.TransactionId">Delete</a> |
                </td>
            </tr>
        }
    </tbody>
</table>
<nav>
    <ul class="pagination">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link"
               href="@Url.Action("OrderIndex", new { pageNumber = Model.PageIndex - 1 })">
                Previous
            </a>
        </li>
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link"
               href="@Url.Action("OrderIndex", new { pageNumber = Model.PageIndex + 1 })">
                Next
            </a>
        </li>
    </ul>
</nav>

<a asp-action="Index">Back</a>
